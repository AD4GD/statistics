#+ summary: "Retrieve the average value for a specific physioChemical property, in a specific NUTS region code (e.g., PL, PL41, LT, NO)"
#+ description: "NOTE: make sure response content type is application/json"
#+ endpoint: "https://www.foodie-cloud.org/sparql"
#+ tags: [ "json" ]
#+ method: "GET"
#+ defaults:
#+   - physioChemicalProperty: http://w3id.org/glosis/model/layerhorizon/NitrogenTotal
#+ transform: {
#+   "physioChemicalProperty": "?property",
#+   "$anchor": "physioChemicalProperty",
#+   "avg_physioChemicalPropertytotal": "?avg_physioChemicalPropertytotal",
#+ }


PREFIX sosa: <http://www.w3.org/ns/sosa/>
PREFIX qudt: <http://qudt.org/schema/qudt/>
PREFIX glosis_lh: <http://w3id.org/glosis/model/layerhorizon/>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX geof: <http://www.opengis.net/def/function/geosparql/>
PREFIX iso: <http://w3id.org/glosis/model/iso28258/2013/>
PREFIX  qb:   <http://purl.org/linked-data/cube#>
PREFIX  sdmx-measure: <http://purl.org/linked-data/sdmx/2009/measure#>
PREFIX  e:    <http://ontologycentral.com/2009/01/eurostat/ns#>
PREFIX  g:    <http://eurostat.linked-statistics.org/ontologies/geographic.rdf#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  dataset: <http://eurostat.linked-statistics.org/data/>
PREFIX nuts: <http://nuts.geovocab.org/>
PREFIX spatial: <http://geovocab.org/spatial#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#>
PREFIX property: <http://eurostat.linked-statistics.org/property#>
PREFIX ramon: <http://rdfdata.eionet.europa.eu/ramon/ontology/>

SELECT (AVG(?value) as ?avg_physioChemicalPropertytotal) (REPLACE(STR(?_physioChemicalProperty_iri), "^.*#([^#]*)$", "$1") as ?property)
WHERE {
    ?obs a ?_physioChemicalProperty_iri ;
         sosa:hasResult ?res ;
         sosa:hasFeatureOfInterest ?lay .
    ?res qudt:numericValue ?value .
    ?site iso:Site.typicalProfile/iso:Profile.element ?lay ;
         geo:hasGeometry/geo:asWKT ?geom .
    {
      SELECT ?g_nuts
      WHERE {
        ?n a ramon:NUTSRegion .
        ?n rdfs:label ?l .
        ?n geo:asWKT ?g_nuts .
        ?l bif:contains ?_nutsCode .
      } limit 1
    }
    FILTER (geof:sfIntersects(?geom, ?g_nuts))
}



